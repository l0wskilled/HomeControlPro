{"version":3,"sources":["../../src/js/heater.js","../../src/js/modal.js"],"names":["fixUrl","urlPart","charAt","substring","length","getHeat","jqxhr","$","getJSON","baseUrl","obj","parseJSON","responseText","console","log","val","temperature","fail","alert","getCurrentValues","wanted","autodown","prop","autoHeatChanged","heatWantedChanged","wantedHeat","onDeviceReady","updateServer","localStorage","getItem","serverHostName","location","host","unbind","click","modal","onOpen","dialog","container","show","data","fadeIn","close","pressEnter","trigger","sessionStorage","setItem","hostname","replace","document","ready","change","this","fn","each","bind","keyup","e","keyCode"],"mappings":"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","file":"global.min.js","sourcesContent":["var baseUrl = \"http://localhost:8080\";\n\nfunction fixUrl(urlPart) {\n    if (urlPart.charAt(0) != \"/\")\n        urlPart = \"/\" + urlPart;\n    if (urlPart.substring(urlPart.length - 3, urlPart.length) == \"get\")\n        urlPart += \"/\";\n    return urlPart;\n}\n\nfunction getHeat() {\n    var urlPart = fixUrl(\"temp/get\");\n    var jqxhr = $.getJSON(baseUrl + urlPart, function () {\n            var obj = $.parseJSON(jqxhr.responseText);\n            console.log(obj);\n            $('#heatCurrent').val(obj.temperature);\n        })\n        .fail(function () {\n            alert(\"Error connecting to  API!\");\n        });\n}\n\nfunction getCurrentValues() {\n    var urlPart = fixUrl(\"temp/get\");\n    var jqxhr = $.getJSON(baseUrl + urlPart, function () {\n            var obj = $.parseJSON(jqxhr.responseText);\n            console.log(obj);\n            $('#heatCurrent').val(obj.temperature);\n            $('#heatWanted').val(obj.wanted);\n            if (obj.autodown == false)\n                $('#heatAuto').prop('checked', false);\n            else\n                $('#heatAuto').prop('checked', true);\n        })\n        .fail(function () {\n            alert(\"Error connecting to  API!\");\n        });\n}\n\nfunction autoHeatChanged(obj) {\n    var urlPart = \"temp/set/autodown/\";\n    if (obj.prop('checked')) {\n        urlPart += \"on\";\n    } else {\n        urlPart += \"off\";\n    }\n    urlPart = fixUrl(urlPart);\n    var jqxhr = $.getJSON(baseUrl + urlPart, function () {\n            var obj = $.parseJSON(jqxhr.responseText);\n            console.log(obj);\n            $('#heatCurrent').val(obj.temperature);\n        })\n        .fail(function () {\n            alert(\"Error connecting to  API!\");\n        });\n}\n\nfunction heatWantedChanged(obj) {\n    var wantedHeat = obj.val();\n    urlPart = fixUrl(\"temp/set/wanted/\" + wantedHeat);\n    var jqxhr = $.getJSON(baseUrl + urlPart, function () {\n            var obj = $.parseJSON(jqxhr.responseText);\n            console.log(obj);\n            $('#heatCurrent').val(obj.temperature);\n        })\n        .fail(function () {\n            alert(\"Error connecting to  API!\");\n        });\n}\n\n$(document).ready(function () {\n    getCurrentValues();\n\n    $('#heatAuto').change(function () {\n        autoHeatChanged($(this));\n    });\n\n    $('#heatWanted').change(function () {\n        heatWantedChanged($(this));\n    });\n\n    //super annoying while developing\n    //var timer = setInterval(getHeat, 30000);\n});","// globale Variable für den Hostnamen\n// -> verschwindet leider beim neu laden :-(\nvar serverHostName;\n\nif (typeof(Storage) !== \"undefined\") {\n    serverHostName = localStorage.getItem('serverHostName');\n}\n\n// Definiere pressEnter-Event, benötigt für Text-Felder\n$.fn.pressEnter = function(fn) {\n    return this.each(function() {\n        $(this).bind('enterPress', fn);\n        $(this).keyup(function(e) {\n            if (e.keyCode == 13) {\n                $(this).trigger(\"enterPress\");\n            }\n        });\n    });\n};\n\n// On Device Ready - wird nach dem Laden des Dokuments ausgeführt (wenn das DOM vollständig aufgebaut wurde)\n$(document).ready(function() {\n    onDeviceReady();\n});\n\n// Initialisierung\nfunction onDeviceReady() {\n\n    // Servername standardmäßig auf aktuellen Host aktualisieren - hier könnte man vielleicht eine HTML5-API verwenden?!\n    if (localStorage.getItem('serverHostName') != null) {\n        updateServer(serverHostName);\n    } else {\n        updateServer(location.host);\n    }\n\n\n    // Button #mainSetting -> Dialogfenster anzeigen\n    // (ggf. ID von mainSettings passend zu Button im Footer anpassen)\n    $(\"#mainSettings\").unbind('click').click(function() {\n        $(\"#tfdIpAdress\").val(serverHostName);\n        $(\"#dialogServer\").modal({onOpen: function (dialog) {\n            dialog.container.show();\n            /* Animiere Fade in */\n            dialog.data.fadeIn('slow');\n        }});\n    });\n\n    // Button #setServer ->Verarbeite Klick auf Button setServer\n    $('#setServer').unbind('click').click(function() {\n        // Get value from text-field\n        updateServer($('#tfdIpAdress').val());\n        // close dialog\n        $.modal.close();\n    });\n\n    // Verwende auch Enter-Taste im Textfeld\n    $(\"#tfdIpAdress\").pressEnter(function() {\n        $(\"#setServer\").trigger('click');\n    });\n\n    // Blende Willkommen-Dialog ein\n    if (sessionStorage.getItem('welcome-shown') != 'true') {\n        $(\"#dialogWelcome\").modal();\n        sessionStorage.setItem('welcome-shown', 'true');\n    }\n}\n\n/* Aktualisiere Server-Name */\nfunction updateServer(hostname)\n{\n    /* Default hostname: http://localhost:8080 */\n    if (hostname === \"\")\n    {\n        hostname = \"http://localhost:8080\";\n    }\n\n    /* Add http:// if no valid protocol was found in URI */\n    if ((hostname.substring(0, 7) != \"http://\") && (hostname.substring(0, 8) != \"https://\")) {\n        hostname = \"http://\" + hostname;\n    }\n    /* Remove trailing / */\n    hostname = hostname.replace(/\\/$/, \"\");\n    /* Update dialog */\n    $(\"#tfdIpAdress\").val(hostname);\n    /* Update setting - vielleicht besser mit HTML5-API?*/\n    serverHostName = hostname;\n    if (typeof(Storage) !== \"undefined\") {\n        localStorage.setItem('serverHostName', serverHostName);\n    }\n}"]}